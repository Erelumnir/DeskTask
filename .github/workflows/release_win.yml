name: Build and Publish Release

on:
  push:
    tags:
      - "v*.*.*"

jobs:
  release:
    runs-on: windows-latest
    env:
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22

      - name: Restore npm cache
        uses: actions/cache/restore@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-npm-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-npm-

      - name: Install dependencies
        run: npm ci

      - name: Save npm cache
        uses: actions/cache/save@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-npm-${{ hashFiles('package-lock.json') }}

      - name: Cache Electron
        uses: actions/cache@v4
        with:
          path: ~/.cache/electron
          key: electron-${{ runner.os }}-${{ hashFiles('package-lock.json') }}

      - name: Clean dist
        run: rm -rf dist
        shell: bash

      - name: Build App
        run: npx electron-builder --win --publish always

      - name: Extract version from tag
        shell: bash
        run: echo "VERSION=${GITHUB_REF_NAME#v}" >> $GITHUB_ENV

      - name: Upload Release Assets
        uses: softprops/action-gh-release@v1
        with:
          name: Release ${{ github.ref_name }}
          tag_name: ${{ github.ref_name }}
          draft: false
          prerelease: false
          files: |
            ./dist/DeskTask Setup ${{ env.VERSION }}.exe
            ./dist/DeskTask Setup ${{ env.VERSION }}.exe.blockmap
            ./dist/latest.yml
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
